#!/bin/sh /etc/rc.common

START=90
NAME=chinadns
EXTRA_COMMANDS="update"
USE_PROCD=1

uci_get_by_type() {
	local ret=$(uci get $NAME.@$1[0].$2 2>/dev/null)
	echo ${ret:=$3}
}

uci_bool_by_type() {
	case "$(uci_get_by_type $1 $2)" in
		1|on|true|yes|enabled) return 0;;
	esac
	return 1
}

kill_all() {
	kill -9 $(pidof $@) >/dev/null 2>&1
}

service_triggers() {
	procd_add_reload_trigger $NAME
}

start_service() {
	uci_bool_by_type $NAME enable || exit 0

	local alldns=$(uci_get_by_type $NAME cn_dns)
	local subport=$(uci_get_by_type $NAME port)
	local subcdns=$(uci_get_by_type $NAME ww_dns)
	for dns in $(uci_get_by_type $NAME ww_dns); do
		let subport=$((subport + 1))
		alldns="${alldns},127.0.0.1#${subport}"
		subcdns="127.0.0.1:${subport} ${subcdns}"
		dns-forwarder -b 0.0.0.0 -p $subport -s $dns &
	done

	let subport=$((subport + 1))
	alldns="${alldns},127.0.0.1#${subport}"
	cat <<-EOF > /var/etc/cdns.json
	{
	  "global": {
	    "daemon": true,
	    "log": "syslog:daemon",
	    "log_debug": false
	  },
	  "cdns": {
	    "listen_ip": "0.0.0.0",
	    "listen_port": $subport,
	    "timeout": 3,
	    "servers": [
	      { "ip_port": "9.9.9.9:53" },
	      $(echo $subcdns | sed 's/ /" }, { "ip_port": "/g; s/^/{ "ip_port": "/g; s/$/" }/g; s/, /,\n      /g')
	    ]
	  }
	}
EOF
	cdns -c /var/etc/cdns.json

	procd_open_instance
	procd_set_param respawn
	procd_set_param stderr 1
	procd_set_param command /usr/bin/chinadns -m
	procd_append_param command "-p" $(uci_get_by_type $NAME port)
	procd_append_param command "-s" "$alldns"
	procd_append_param command "-c" $(uci_get_by_type $NAME chnroute)
	uci_bool_by_type $NAME bidirectional && procd_append_param command "-d"
	procd_close_instance
}

stop_service() {
	kill_all dns-forwarder cdns
}

update(){
	chnroute=$(uci_get_by_type $NAME chnroute)
	[ "Z$chnroute" != "Z" ] || return 0

	chnsrc='https://raw.githubusercontent.com/17mon/china_ip_list/master/china_ip_list.txt'

	echo "# $chnroute Updating"
	curl --connect-timeout 10 --max-time 120 -ksSL $chnsrc -o $chnroute
	if [ $? -eq 0 ]; then
		echo "# $chnroute Updated"
	else
		echo "# $chnroute NOT Updated"
	fi

	if [ ! -f "$chnroute" ] || [ $(ls -l "$chnroute" | awk '{print $5}') -lt 4096 ];then
		echo "# $chnroute is broken, failsafe Now!"
		rm -f "$chnroute"
		cp -f "/rom$chnroute" "$chnroute"
	fi
}
